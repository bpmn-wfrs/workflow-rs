// @generated by protobuf-ts 2.9.1 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "wfrs.proto" (package "wfrs", syntax proto3)
import { ServiceType } from '@protobuf-ts/runtime-rpc';
import { MessageType } from '@protobuf-ts/runtime';
/**
 * @generated from protobuf message wfrs.ObjectId
 */
export interface ObjectId {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message wfrs.LoadRequest
 */
export interface LoadRequest {
    /**
     * @generated from protobuf field: string ctx = 1;
     */
    ctx: string;
    /**
     * @generated from protobuf field: string def = 2;
     */
    def: string;
    /**
     * @generated from protobuf field: string ver = 3;
     */
    ver: string;
}
/**
 * @generated from protobuf message wfrs.OptLoadResponse
 */
export interface OptLoadResponse {
    /**
     * @generated from protobuf field: wfrs.LoadResponse workflow = 1;
     */
    workflow?: LoadResponse;
}
/**
 * @generated from protobuf message wfrs.LoadResponse
 */
export interface LoadResponse {
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 1;
     */
    key?: ObjectId;
    /**
     * @generated from protobuf field: bytes state = 2;
     */
    state: Uint8Array;
    /**
     * @generated from protobuf field: string ver = 3;
     */
    ver: string;
    /**
     * @generated from protobuf field: int64 ts = 4;
     */
    ts: string;
}
/**
 * @generated from protobuf message wfrs.IsSyncRequest
 */
export interface IsSyncRequest {
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 1;
     */
    key?: ObjectId;
    /**
     * @generated from protobuf field: int64 ts = 2;
     */
    ts: string;
}
/**
 * @generated from protobuf message wfrs.IsSyncResponse
 */
export interface IsSyncResponse {
    /**
     * @generated from protobuf field: bool sync = 1;
     */
    sync: boolean;
}
/**
 * @generated from protobuf message wfrs.ListRequest
 */
export interface ListRequest {
    /**
     * @generated from protobuf field: uint64 total = 1;
     */
    total: string;
    /**
     * @generated from protobuf field: uint64 page = 2;
     */
    page: string;
    /**
     * @generated from protobuf field: uint64 limit = 3;
     */
    limit: string;
}
/**
 * @generated from protobuf message wfrs.ListResponse
 */
export interface ListResponse {
    /**
     * @generated from protobuf field: uint64 total = 1;
     */
    total: string;
    /**
     * @generated from protobuf field: uint64 page = 2;
     */
    page: string;
    /**
     * @generated from protobuf field: uint64 limit = 3;
     */
    limit: string;
    /**
     * @generated from protobuf field: repeated wfrs.WorkflowInfo list = 4;
     */
    list: WorkflowInfo[];
}
/**
 * @generated from protobuf message wfrs.CreateRequest
 */
export interface CreateRequest {
    /**
     * @generated from protobuf field: string ctx = 1;
     */
    ctx: string;
    /**
     * @generated from protobuf field: string def = 2;
     */
    def: string;
    /**
     * @generated from protobuf field: string ver = 3;
     */
    ver: string;
    /**
     * @generated from protobuf field: bytes state = 4;
     */
    state: Uint8Array;
    /**
     * @generated from protobuf field: wfrs.TitleContext title = 5;
     */
    title?: TitleContext;
    /**
     * @generated from protobuf field: int32 ttl = 6;
     */
    ttl: number;
}
/**
 * @generated from protobuf message wfrs.WorkflowInfo
 */
export interface WorkflowInfo {
    /**
     * @generated from protobuf field: string ctx = 1;
     */
    ctx: string;
    /**
     * @generated from protobuf field: string def = 2;
     */
    def: string;
    /**
     * @generated from protobuf field: string ver = 3;
     */
    ver: string;
    /**
     * @generated from protobuf field: wfrs.TitleContext title = 4;
     */
    title?: TitleContext;
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 5;
     */
    key?: ObjectId;
    /**
     * @generated from protobuf field: int64 ts = 6;
     */
    ts: string;
}
/**
 * @generated from protobuf message wfrs.CreateResponse
 */
export interface CreateResponse {
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 1;
     */
    key?: ObjectId;
    /**
     * @generated from protobuf field: int64 ts = 2;
     */
    ts: string;
}
/**
 * @generated from protobuf message wfrs.UpdateRequest
 */
export interface UpdateRequest {
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 1;
     */
    key?: ObjectId;
    /**
     * @generated from protobuf field: wfrs.TitleContext title = 2;
     */
    title?: TitleContext;
    /**
     * @generated from protobuf field: bytes state = 3;
     */
    state: Uint8Array;
}
/**
 * @generated from protobuf message wfrs.UpdateResponse
 */
export interface UpdateResponse {
    /**
     * @generated from protobuf field: bool success = 1;
     */
    success: boolean;
    /**
     * @generated from protobuf field: int64 ts = 2;
     */
    ts: string;
}
/**
 * @generated from protobuf message wfrs.CompleteRequest
 */
export interface CompleteRequest {
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 1;
     */
    key?: ObjectId;
    /**
     * @generated from protobuf field: bool cancelled = 2;
     */
    cancelled: boolean;
}
/**
 * @generated from protobuf message wfrs.CompleteResponse
 */
export interface CompleteResponse {
    /**
     * @generated from protobuf field: bool success = 1;
     */
    success: boolean;
}
/**
 * @generated from protobuf message wfrs.TitleContext
 */
export interface TitleContext {
    /**
     * @generated from protobuf field: string heading = 1;
     */
    heading: string;
    /**
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * @generated from protobuf field: bytes context = 3;
     */
    context: Uint8Array;
}
/**
 * @generated from protobuf message wfrs.ListenRequest
 */
export interface ListenRequest {
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 1;
     */
    key?: ObjectId;
}
/**
 * @generated from protobuf message wfrs.CreateEvent
 */
export interface CreateEvent {
    /**
     * @generated from protobuf field: string ctx = 1;
     */
    ctx: string;
    /**
     * @generated from protobuf field: string def = 2;
     */
    def: string;
    /**
     * @generated from protobuf field: string ver = 3;
     */
    ver: string;
    /**
     * @generated from protobuf field: string sub = 4;
     */
    sub: string;
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 5;
     */
    key?: ObjectId;
    /**
     * @generated from protobuf field: bytes state = 6;
     */
    state: Uint8Array;
    /**
     * @generated from protobuf field: int64 ts = 7;
     */
    ts: string;
}
/**
 * @generated from protobuf message wfrs.UpdateEvent
 */
export interface UpdateEvent {
    /**
     * @generated from protobuf field: string sub = 1;
     */
    sub: string;
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 2;
     */
    key?: ObjectId;
    /**
     * @generated from protobuf field: bytes state = 3;
     */
    state: Uint8Array;
    /**
     * @generated from protobuf field: int64 ts = 4;
     */
    ts: string;
}
/**
 * @generated from protobuf message wfrs.CompleteEvent
 */
export interface CompleteEvent {
    /**
     * @generated from protobuf field: string ctx = 1;
     */
    ctx: string;
    /**
     * @generated from protobuf field: string def = 2;
     */
    def: string;
    /**
     * @generated from protobuf field: string ver = 3;
     */
    ver: string;
    /**
     * @generated from protobuf field: string sub = 4;
     */
    sub: string;
    /**
     * @generated from protobuf field: wfrs.ObjectId key = 5;
     */
    key?: ObjectId;
    /**
     * @generated from protobuf field: bool cancelled = 6;
     */
    cancelled: boolean;
}
/**
 * @generated from protobuf message wfrs.ListenResponse
 */
export interface ListenResponse {
    /**
     * @generated from protobuf field: int64 ts = 1;
     */
    ts: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf oneof: event
     */
    event:
        | {
              oneofKind: 'createEvent';
              /**
               * @generated from protobuf field: wfrs.CreateEvent create_event = 3;
               */
              createEvent: CreateEvent;
          }
        | {
              oneofKind: 'updateEvent';
              /**
               * @generated from protobuf field: wfrs.UpdateEvent update_event = 4;
               */
              updateEvent: UpdateEvent;
          }
        | {
              oneofKind: 'completeEvent';
              /**
               * @generated from protobuf field: wfrs.CompleteEvent complete_event = 5;
               */
              completeEvent: CompleteEvent;
          }
        | {
              oneofKind: undefined;
          };
}
// @generated message type with reflection information, may provide speed optimized methods
class ObjectId$Type extends MessageType<ObjectId> {
    constructor() {
        super('wfrs.ObjectId', [
            { no: 1, name: 'id', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.ObjectId
 */
export const ObjectId = new ObjectId$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadRequest$Type extends MessageType<LoadRequest> {
    constructor() {
        super('wfrs.LoadRequest', [
            {
                no: 1,
                name: 'ctx',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 2,
                name: 'def',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 3,
                name: 'ver',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.LoadRequest
 */
export const LoadRequest = new LoadRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OptLoadResponse$Type extends MessageType<OptLoadResponse> {
    constructor() {
        super('wfrs.OptLoadResponse', [
            { no: 1, name: 'workflow', kind: 'message', T: () => LoadResponse },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.OptLoadResponse
 */
export const OptLoadResponse = new OptLoadResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LoadResponse$Type extends MessageType<LoadResponse> {
    constructor() {
        super('wfrs.LoadResponse', [
            { no: 1, name: 'key', kind: 'message', T: () => ObjectId },
            {
                no: 2,
                name: 'state',
                kind: 'scalar',
                T: 12 /* ScalarType.BYTES */,
            },
            {
                no: 3,
                name: 'ver',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            { no: 4, name: 'ts', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.LoadResponse
 */
export const LoadResponse = new LoadResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IsSyncRequest$Type extends MessageType<IsSyncRequest> {
    constructor() {
        super('wfrs.IsSyncRequest', [
            { no: 1, name: 'key', kind: 'message', T: () => ObjectId },
            { no: 2, name: 'ts', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.IsSyncRequest
 */
export const IsSyncRequest = new IsSyncRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IsSyncResponse$Type extends MessageType<IsSyncResponse> {
    constructor() {
        super('wfrs.IsSyncResponse', [
            { no: 1, name: 'sync', kind: 'scalar', T: 8 /* ScalarType.BOOL */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.IsSyncResponse
 */
export const IsSyncResponse = new IsSyncResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListRequest$Type extends MessageType<ListRequest> {
    constructor() {
        super('wfrs.ListRequest', [
            {
                no: 1,
                name: 'total',
                kind: 'scalar',
                T: 4 /* ScalarType.UINT64 */,
            },
            {
                no: 2,
                name: 'page',
                kind: 'scalar',
                T: 4 /* ScalarType.UINT64 */,
            },
            {
                no: 3,
                name: 'limit',
                kind: 'scalar',
                T: 4 /* ScalarType.UINT64 */,
            },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.ListRequest
 */
export const ListRequest = new ListRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListResponse$Type extends MessageType<ListResponse> {
    constructor() {
        super('wfrs.ListResponse', [
            {
                no: 1,
                name: 'total',
                kind: 'scalar',
                T: 4 /* ScalarType.UINT64 */,
            },
            {
                no: 2,
                name: 'page',
                kind: 'scalar',
                T: 4 /* ScalarType.UINT64 */,
            },
            {
                no: 3,
                name: 'limit',
                kind: 'scalar',
                T: 4 /* ScalarType.UINT64 */,
            },
            {
                no: 4,
                name: 'list',
                kind: 'message',
                repeat: 1 /* RepeatType.PACKED */,
                T: () => WorkflowInfo,
            },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.ListResponse
 */
export const ListResponse = new ListResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateRequest$Type extends MessageType<CreateRequest> {
    constructor() {
        super('wfrs.CreateRequest', [
            {
                no: 1,
                name: 'ctx',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 2,
                name: 'def',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 3,
                name: 'ver',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 4,
                name: 'state',
                kind: 'scalar',
                T: 12 /* ScalarType.BYTES */,
            },
            { no: 5, name: 'title', kind: 'message', T: () => TitleContext },
            { no: 6, name: 'ttl', kind: 'scalar', T: 5 /* ScalarType.INT32 */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.CreateRequest
 */
export const CreateRequest = new CreateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorkflowInfo$Type extends MessageType<WorkflowInfo> {
    constructor() {
        super('wfrs.WorkflowInfo', [
            {
                no: 1,
                name: 'ctx',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 2,
                name: 'def',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 3,
                name: 'ver',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            { no: 4, name: 'title', kind: 'message', T: () => TitleContext },
            { no: 5, name: 'key', kind: 'message', T: () => ObjectId },
            { no: 6, name: 'ts', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.WorkflowInfo
 */
export const WorkflowInfo = new WorkflowInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateResponse$Type extends MessageType<CreateResponse> {
    constructor() {
        super('wfrs.CreateResponse', [
            { no: 1, name: 'key', kind: 'message', T: () => ObjectId },
            { no: 2, name: 'ts', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.CreateResponse
 */
export const CreateResponse = new CreateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateRequest$Type extends MessageType<UpdateRequest> {
    constructor() {
        super('wfrs.UpdateRequest', [
            { no: 1, name: 'key', kind: 'message', T: () => ObjectId },
            { no: 2, name: 'title', kind: 'message', T: () => TitleContext },
            {
                no: 3,
                name: 'state',
                kind: 'scalar',
                T: 12 /* ScalarType.BYTES */,
            },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.UpdateRequest
 */
export const UpdateRequest = new UpdateRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateResponse$Type extends MessageType<UpdateResponse> {
    constructor() {
        super('wfrs.UpdateResponse', [
            {
                no: 1,
                name: 'success',
                kind: 'scalar',
                T: 8 /* ScalarType.BOOL */,
            },
            { no: 2, name: 'ts', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.UpdateResponse
 */
export const UpdateResponse = new UpdateResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompleteRequest$Type extends MessageType<CompleteRequest> {
    constructor() {
        super('wfrs.CompleteRequest', [
            { no: 1, name: 'key', kind: 'message', T: () => ObjectId },
            {
                no: 2,
                name: 'cancelled',
                kind: 'scalar',
                T: 8 /* ScalarType.BOOL */,
            },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.CompleteRequest
 */
export const CompleteRequest = new CompleteRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompleteResponse$Type extends MessageType<CompleteResponse> {
    constructor() {
        super('wfrs.CompleteResponse', [
            {
                no: 1,
                name: 'success',
                kind: 'scalar',
                T: 8 /* ScalarType.BOOL */,
            },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.CompleteResponse
 */
export const CompleteResponse = new CompleteResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TitleContext$Type extends MessageType<TitleContext> {
    constructor() {
        super('wfrs.TitleContext', [
            {
                no: 1,
                name: 'heading',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 2,
                name: 'description',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 3,
                name: 'context',
                kind: 'scalar',
                T: 12 /* ScalarType.BYTES */,
            },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.TitleContext
 */
export const TitleContext = new TitleContext$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListenRequest$Type extends MessageType<ListenRequest> {
    constructor() {
        super('wfrs.ListenRequest', [
            { no: 1, name: 'key', kind: 'message', T: () => ObjectId },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.ListenRequest
 */
export const ListenRequest = new ListenRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateEvent$Type extends MessageType<CreateEvent> {
    constructor() {
        super('wfrs.CreateEvent', [
            {
                no: 1,
                name: 'ctx',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 2,
                name: 'def',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 3,
                name: 'ver',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 4,
                name: 'sub',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            { no: 5, name: 'key', kind: 'message', T: () => ObjectId },
            {
                no: 6,
                name: 'state',
                kind: 'scalar',
                T: 12 /* ScalarType.BYTES */,
            },
            { no: 7, name: 'ts', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.CreateEvent
 */
export const CreateEvent = new CreateEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateEvent$Type extends MessageType<UpdateEvent> {
    constructor() {
        super('wfrs.UpdateEvent', [
            {
                no: 1,
                name: 'sub',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            { no: 2, name: 'key', kind: 'message', T: () => ObjectId },
            {
                no: 3,
                name: 'state',
                kind: 'scalar',
                T: 12 /* ScalarType.BYTES */,
            },
            { no: 4, name: 'ts', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.UpdateEvent
 */
export const UpdateEvent = new UpdateEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompleteEvent$Type extends MessageType<CompleteEvent> {
    constructor() {
        super('wfrs.CompleteEvent', [
            {
                no: 1,
                name: 'ctx',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 2,
                name: 'def',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 3,
                name: 'ver',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 4,
                name: 'sub',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            { no: 5, name: 'key', kind: 'message', T: () => ObjectId },
            {
                no: 6,
                name: 'cancelled',
                kind: 'scalar',
                T: 8 /* ScalarType.BOOL */,
            },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.CompleteEvent
 */
export const CompleteEvent = new CompleteEvent$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ListenResponse$Type extends MessageType<ListenResponse> {
    constructor() {
        super('wfrs.ListenResponse', [
            { no: 1, name: 'ts', kind: 'scalar', T: 3 /* ScalarType.INT64 */ },
            {
                no: 2,
                name: 'name',
                kind: 'scalar',
                T: 9 /* ScalarType.STRING */,
            },
            {
                no: 3,
                name: 'create_event',
                kind: 'message',
                oneof: 'event',
                T: () => CreateEvent,
            },
            {
                no: 4,
                name: 'update_event',
                kind: 'message',
                oneof: 'event',
                T: () => UpdateEvent,
            },
            {
                no: 5,
                name: 'complete_event',
                kind: 'message',
                oneof: 'event',
                T: () => CompleteEvent,
            },
        ]);
    }
}
/**
 * @generated MessageType for protobuf message wfrs.ListenResponse
 */
export const ListenResponse = new ListenResponse$Type();
/**
 * @generated ServiceType for protobuf service wfrs.Workflow
 */
export const Workflow = new ServiceType('wfrs.Workflow', [
    { name: 'Load', options: {}, I: LoadRequest, O: OptLoadResponse },
    { name: 'IsSync', options: {}, I: IsSyncRequest, O: IsSyncResponse },
    { name: 'List', options: {}, I: ListRequest, O: ListResponse },
    { name: 'Create', options: {}, I: CreateRequest, O: CreateResponse },
    { name: 'Update', options: {}, I: UpdateRequest, O: UpdateResponse },
    { name: 'Complete', options: {}, I: CompleteRequest, O: CompleteResponse },
    {
        name: 'Listen',
        serverStreaming: true,
        options: {},
        I: ListenRequest,
        O: ListenResponse,
    },
]);
